// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViagemProjeto.Models;

#nullable disable

namespace ViagemProjeto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ViagemProjeto.Models.Carga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CargaComercial")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CargaPrioritaria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("PassageiroId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Peso")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PassageiroId");

                    b.ToTable("Cargas");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Clima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlertasTempestades")
                        .HasColumnType("TEXT");

                    b.Property<string>("CondicoesAdversas")
                        .HasColumnType("TEXT");

                    b.Property<string>("CondicoesMeteorologicas")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrevisaoTempo")
                        .HasColumnType("TEXT");

                    b.Property<int>("VooId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VooId");

                    b.ToTable("Climas");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Passageiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("InformacoesContato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Passaporte")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<int>("VooId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VooId");

                    b.ToTable("Passageiros");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Tripulacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cargo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Funcao")
                        .HasColumnType("TEXT");

                    b.Property<string>("HorarioTrabalho")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdiomasFalados")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Qualificacoes")
                        .HasColumnType("TEXT");

                    b.Property<int>("VooId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VooId");

                    b.ToTable("Tripulacoes");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Voo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Companhia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destino")
                        .HasColumnType("TEXT");

                    b.Property<string>("HrChegadaPrevista")
                        .HasColumnType("TEXT");

                    b.Property<string>("HrPartida")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroVoo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Origem")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TemProblema")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoAviao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("VooCancelado")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Voos");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Carga", b =>
                {
                    b.HasOne("ViagemProjeto.Models.Passageiro", "Passageiro")
                        .WithMany()
                        .HasForeignKey("PassageiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passageiro");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Clima", b =>
                {
                    b.HasOne("ViagemProjeto.Models.Voo", "Voo")
                        .WithMany()
                        .HasForeignKey("VooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voo");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Passageiro", b =>
                {
                    b.HasOne("ViagemProjeto.Models.Voo", "Voo")
                        .WithMany()
                        .HasForeignKey("VooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voo");
                });

            modelBuilder.Entity("ViagemProjeto.Models.Tripulacao", b =>
                {
                    b.HasOne("ViagemProjeto.Models.Voo", "Voo")
                        .WithMany()
                        .HasForeignKey("VooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voo");
                });
#pragma warning restore 612, 618
        }
    }
}
